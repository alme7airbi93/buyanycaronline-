{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/header/header.component.html","./src/app/home/home.component.html","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/config/routes.ts","./src/app/config/storage.ts","./src/app/header/header.component.css","./src/app/header/header.component.ts","./src/app/home/home.component.css","./src/app/home/home.component.ts","./src/app/services/authentication.service.ts","./src/environments/environment.prod.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n<div id=\\\"main-wrapper\\\">\\n\\n  <!-- header -->\\n  <app-header></app-header>\\n  <!-- main content -->\\n  <router-outlet></router-outlet>\\n\\n  <!-- Footer -->\\n  <footer>\\n    <div class=\\\"container\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12 col-sm-12\\\">\\n          <div class=\\\"clearfix\\\">\\n            <ul id=\\\"footer-links\\\">\\n              <li><a href=\\\"\\\">Home</a> |\\n              </li>\\n              <li><a href=\\\"/car-search\\\"> Cars</a> |\\n              </li>\\n              <li><a href=\\\"/boat-search\\\"> Boats</a> |\\n              </li>\\n              <li><a href=\\\"#\\\"> About</a> |\\n              </li>\\n              <li><a href=\\\"#\\\"> Contact</a>\\n              </li>\\n            </ul>\\n            <div id=\\\"footer-right\\\">Â© 2019 BUYANYCARONLINE</div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </footer>\\n\\n\\n\\n</div>\\n\\n\\n\"","module.exports = \"<header>\\n  <div id=\\\"header-main\\\">\\n    <div class=\\\"container clearfix\\\">\\n      <div id=\\\"header-left\\\">\\n        <div class=\\\"clearfix\\\">\\n          <!--Logo-->\\n          <a class=\\\"header-logo\\\" href=\\\"/\\\">\\n            <img src=\\\"/assets/img/logo.jpg\\\" alt=\\\"Logo\\\">\\n          </a>\\n        </div>\\n      </div>\\n      <div id=\\\"header-right\\\">\\n        <div *ngIf=\\\"!currentUser\\\" id=\\\"header-authentication\\\">\\n          <button type=\\\"button\\\" data-toggle=\\\"modal\\\" data-target=\\\"#loginPopup\\\">LOGIN</button>\\n          <span>|</span>\\n          <button type=\\\"button\\\" data-toggle=\\\"modal\\\" data-target=\\\"#registerPopup\\\">REGISTER</button>\\n        </div>\\n        <div *ngIf=\\\"currentUser\\\" id=\\\"header-authentication\\\">\\n          <div class=\\\"dropdown\\\" id=\\\"nav-mainMenu-links\\\">\\n            <button class=\\\"dropdown-toggle\\\" id=\\\"dropdownMenuButton\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\"\\n                    aria-expanded=\\\"false\\\">\\n              {{currentUser.username}}\\n            </button>\\n            <div id=\\\"header-authentication\\\" *ngIf=\\\"currentUser.type == 'ADMIN'\\\">\\n              <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenuButton\\\">\\n                <a class=\\\"dropdown-item\\\" href=\\\"monitor-page\\\">Ad Manage</a>\\n                <a class=\\\"dropdown-item\\\" href=\\\"user-profile/{{currentUser.id}}\\\">User Profile</a>\\n                <a class=\\\"dropdown-item\\\" (click)=\\\"logout()\\\">LOGOUT</a>\\n              </div>\\n            </div>\\n            <div id=\\\"header-authentication\\\" *ngIf=\\\"currentUser.type == 'USER'\\\">\\n              <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenuButton\\\">\\n                <a class=\\\"dropdown-item\\\" href=\\\"user-profile/{{currentUser.id}}\\\">User Profile</a>\\n                <a class=\\\"dropdown-item\\\" (click)=\\\"logout()\\\">LOGOUT</a>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div id=\\\"header-select\\\">\\n          <div>\\n            <a id=\\\"header-language\\\" href=\\\"#\\\" data-toggle=\\\"dropdown\\\" data-width=\\\"100%\\\">\\n              <img src=\\\"/assets/img/lang-eng.png\\\">ENGLISH</a>\\n            <ul class=\\\"dropdown-menu dropdown-menu-right\\\">\\n              <li><a href=\\\"#\\\">Arabic</a></li>\\n              <li><a href=\\\"#\\\">French</a></li>\\n            </ul>\\n          </div>\\n          <!--<div>\\n          <a id=\\\"header-currency\\\" href=\\\"#\\\" data-toggle=\\\"dropdown\\\" data-width=\\\"100%\\\">\\n              <i class=\\\"fa fa-money\\\" style=\\\"margin-right: 3px;\\\"></i>AED</a>\\n          <ul class=\\\"dropdown-menu dropdown-menu-right\\\">\\n              <li><a href=\\\"#\\\">USD</a></li>\\n              <li><a href=\\\"#\\\">INR</a></li>\\n          </ul>\\n          </div>-->\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <nav id=\\\"mainMenu\\\">\\n    <div class=\\\"container\\\">\\n      <div id=\\\"mainMenu-inner\\\">\\n        <a href=\\\"javascript:void(0);\\\" id=\\\"mainMenu-icon\\\">\\n          <i class=\\\"fa fa-bars\\\"></i>\\n        </a>\\n        <ul id=\\\"mainMenu-links\\\" class=\\\"clearfix\\\">\\n          <li><a href=\\\"#\\\" class=\\\"active\\\">Home</a>\\n          </li>\\n          <li><a href=\\\"/car-search\\\">Cars</a>\\n          </li>\\n          <li><a href=\\\"/boat-search\\\">Boats</a>\\n          </li>\\n          <li><a href=\\\"#\\\">About</a>\\n          </li>\\n          <li><a href=\\\"#\\\">Contact</a>\\n          </li>\\n        </ul>\\n      </div>\\n    </div>\\n  </nav>\\n</header>\\n\\n\\n<div class=\\\"modal fade\\\" id=\\\"loginPopup\\\">\\n  <div class=\\\"modal-dialog\\\" style=\\\"max-width: 350px;\\\">\\n    <div class=\\\"modal-content popup-form\\\">\\n      <!-- Modal Header -->\\n      <div class=\\\"modal-dialog-loader\\\" style=\\\"display:none;\\\"></div>\\n      <div class=\\\"modal-header pf-header\\\">\\n        <h4 class=\\\"pf-title\\\">Login</h4>\\n        <button type=\\\"button\\\" class=\\\"close pf-close\\\" data-dismiss=\\\"modal\\\">\\n          <i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i>\\n        </button>\\n      </div>\\n      <div class=\\\"pf-content\\\">\\n        <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onLoginSubmit()\\\" method=\\\"post\\\">\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"pf-label\\\">Email</label>\\n            <input type=\\\"email\\\" formControlName=\\\"username\\\" class=\\\"form-control pf-textInput\\\"\\n                   [ngClass]=\\\"{ 'is-invalid': invalid && loginControls.username.errors }\\\"   placeholder=\\\"Enter your email\\\"/>\\n            <div class=\\\"invalid-feedback\\\">\\n              <div [ngClass]=\\\"{ 'is-invalid': invalid && loginControls.username.errors }\\\" class=\\\"invalid-feedback\\\">\\n                 <div *ngIf=\\\"loginControls.username.errors.required\\\">User Name is required</div>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"pf-label\\\">Password</label>\\n            <input type=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-control pf-textInput\\\"\\n                   [ngClass]=\\\"{ 'is-invalid': invalid && loginControls.password.errors }\\\"  placeholder=\\\"Enter your password\\\"/>\\n            <div class=\\\"invalid-feedback\\\">\\n              <div [ngClass]=\\\"{ 'is-invalid': invalid && loginControls.password.errors }\\\" class=\\\"invalid-feedback\\\">\\n               <div *ngIf=\\\"loginControls.password.errors.required\\\">Password is required</div>\\n              </div>\\n            </div>\\n          </div>\\n          <button type=\\\"submit\\\" class=\\\"pf-submit\\\"> Login </button>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"modal fade\\\" id=\\\"registerPopup\\\">\\n  <div class=\\\"modal-dialog\\\" style=\\\"max-width: 350px;\\\">\\n    <div class=\\\"modal-content popup-form\\\">\\n      <!-- Modal Header -->\\n      <div class=\\\"modal-dialog-loader\\\" style=\\\"display:none;\\\"></div>\\n      <div class=\\\"modal-header pf-header\\\">\\n        <h4 class=\\\"pf-title\\\">Register</h4>\\n        <button type=\\\"button\\\" class=\\\"close pf-close\\\" data-dismiss=\\\"modal\\\">\\n          <i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i>\\n        </button>\\n      </div>\\n      <div class=\\\"pf-content\\\">\\n        <form [formGroup]=\\\"registerForm\\\" method=\\\"post\\\">\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"pf-label\\\">User Name</label>\\n            <input email type=\\\"text\\\" formControlName=\\\"username\\\" class=\\\"form-control pf-textInput\\\"\\n                   placeholder=\\\"Enter your user name\\\"/>\\n            <div *ngIf=\\\"registerControls.username.errors\\\" class=\\\"invalid-feedback\\\">\\n              <div *ngIf=\\\"registerControls.username.errors.required\\\">User Name is required</div>\\n              <div *ngIf=\\\"registerControls.username.errors.exist\\\">User name already used</div>\\n              <div *ngIf=\\\"registerControls.username.errors.email\\\">Email is required</div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"pf-label\\\">Password</label>\\n            <input type=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-control pf-textInput\\\"\\n                   placeholder=\\\"Enter your password\\\"/>\\n            <div *ngIf=\\\"registerControls.password.errors\\\" class=\\\"invalid-feedback\\\">\\n              <div *ngIf=\\\"registerControls.password.errors.required\\\">Password is required</div>\\n              <div *ngIf=\\\"registerControls.password.errors.minlength\\\">Password must be at least 6 characters</div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"pf-label\\\">Confirm Password</label>\\n            <input type=\\\"password\\\" formControlName=\\\"confirmPassword\\\" class=\\\"form-control pf-textInput\\\"\\n                   placeholder=\\\"Enter your confirm password\\\"/>\\n            <div *ngIf=\\\"registerControls.confirmPassword.errors\\\" class=\\\"invalid-feedback\\\">\\n              <div *ngIf=\\\"registerControls.confirmPassword.errors.required\\\">Confirm Password is required</div>\\n              <div *ngIf=\\\"registerControls.confirmPassword.errors.minlength\\\">Password must be at least 6 characters\\n              </div>\\n              <div *ngIf=\\\"registerControls.confirmPassword.errors.mustMatch\\\">Passwords must match</div>\\n            </div>\\n          </div>\\n          <input (click)=\\\"onRegisterSubmit()\\\" type=\\\"submit\\\" value=\\\"Register\\\" class=\\\"pf-submit\\\">\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"<p>home works!</p>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.css\"]\n})\nexport class AppComponent {\n  public title = \"buyanycaronline\";\n}\n","import { NgModule } from \"@angular/core\";\nimport {ReactiveFormsModule} from \"@angular/forms\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport {RouterModule} from \"@angular/router\";\nimport { AppComponent } from \"./app.component\";\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {AppRoutingModule} from \"./config/routes\";\nimport { HeaderComponent } from './header/header.component';\nimport { HomeComponent } from './home/home.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    HomeComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    RouterModule,\n    ReactiveFormsModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport {HomeComponent} from '../home/home.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: HomeComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { InjectionToken } from \"@angular/core\";\n\nexport const BROWSER_STORAGE = new InjectionToken<Storage>('Browser Storage', {\n  providedIn: 'root',\n  factory: () => localStorage\n});\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hlYWRlci9oZWFkZXIuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport { AuthenticationService } from \"../services/authentication.service\";\nimport { User} from \"../models/user\";\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n  currentUser: User;\n  loginForm: FormGroup;\n  registerForm: FormGroup;\n  invalid: boolean;\n\n  constructor(private authServer: AuthenticationService, private formBuilder: FormBuilder) {\n    this.currentUser = null;\n    this.invalid = false;\n    this.createLoginForm();\n    this.createRegisterForm();\n  }\n\n  MustMatch(controlName: string, matchingControlName: string) {\n    return (formGroup: FormGroup) => {\n      const control = formGroup.controls[controlName];\n      const matchingControl = formGroup.controls[matchingControlName];\n\n      if (matchingControl.errors && !matchingControl.errors.mustMatch) {\n        return;\n      }\n\n      // set error on matchingControl if validation fails\n      if (control.value !== matchingControl.value) {\n        matchingControl.setErrors({ mustMatch: true });\n      } else {\n        matchingControl.setErrors(null);\n      }\n    };\n  }\n  createLoginForm() {\n    this.loginForm = this.formBuilder.group({\n      username        : ['', [Validators.required, Validators.email]],\n      password        : ['', [Validators.required]]\n    });\n  }\n  createRegisterForm() {\n    this.registerForm = this.formBuilder.group({\n      username        : ['', [Validators.required, Validators.email]],\n      password        : ['', [Validators.required, Validators.minLength(6)]],\n      confirmPassword : ['', [Validators.required, Validators.minLength(6)]]\n    }, {\n      validator: this.MustMatch('password', 'confirmPassword')\n    });\n  }\n\n  onLoginSubmit() {\n    if (this.loginForm.invalid) {\n      this.invalid = true;\n      console.log('Invalid', this.invalid);\n      return;\n    }\n    this.authServer.login(this.loginForm.value).then( () => {\n      this.currentUser = this.authServer.getCurrentUser();\n    }).catch( err => {\n      console.log('Error', err);\n    });\n  }\n\n  onRegisterSubmit() {\n\n  }\n  get registerControls(): any {\n    return this.registerForm.controls;\n  }\n\n  get loginControls(): any {\n    return this.loginForm.controls;\n  }\n\n  logout() {\n    this.currentUser = null;\n    this.authServer.logout();\n  }\n\n  ngOnInit() {\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Inject, Injectable } from '@angular/core';\nimport { BROWSER_STORAGE} from \"../config/storage\";\nimport {User} from \"../models/user\";\nimport {Authresponse} from \"../models/authresponse\";\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment} from \"../../environments/environment.prod\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  constructor(private http: HttpClient, @Inject(BROWSER_STORAGE) private storage: Storage) { }\n\n  private handleError(error: any): Promise<any> {\n    console.error('Something has gone wrong', error);\n    return Promise.reject(error.message || error);\n  }\n  private makeAuthApiCall(urlPath: string, user: User): Promise<Authresponse> {\n    const url: string = environment.apiBaseUrl + urlPath;\n    return this.http\n      .post(url, user)\n      .toPromise()\n      .then(response => response as Authresponse)\n      .catch(this.handleError);\n  }\n  public getToken(): string {\n    return this.storage.getItem('customer-token');\n  }\n  public saveToken(token: string): void {\n    this.storage.setItem('customer-token', token);\n  }\n  public login(user: any): Promise<any> {\n    return this.makeAuthApiCall('login', user).then((authRes: Authresponse) => {\n      this.saveToken(authRes.token);\n    });\n  }\n  public register(user: any): Promise<any> {\n    return this.makeAuthApiCall('register', user).then((authRes: Authresponse) => {\n      this.saveToken(authRes.token);\n    });\n  }\n  public logout(): void {\n    this.storage.removeItem('customer-token');\n  }\n  public isLoggedIn(): boolean {\n    const token: string = this.getToken();\n    if (token) {\n      const payload = JSON.parse(atob(token.split('.')[1]));\n      return payload.exp > (Date.now() / 1000);\n    } else {\n      return false;\n    }\n  }\n  public getCurrentUser(): User {\n    if (this.isLoggedIn()) {\n      const token: string = this.getToken();\n      const { username } = JSON.parse(atob(token.split('.')[1]));\n      return { username} as User;\n    }\n  }\n}\n","export const environment = {\n  apiBaseUrl: \"http://localhost:3000/\",\n  production: true\n};\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  apiBaseUrl: \"http://localhost:3000/\",\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from \"@angular/core\";\nimport { platformBrowserDynamic } from \"@angular/platform-browser-dynamic\";\n\nimport { AppModule } from \"./app/app.module\";\nimport { environment } from \"./environments/environment\";\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch((err) => console.error(err));\n"],"sourceRoot":"webpack:///"}